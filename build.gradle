
buildscript {

    ext {
        kotlin_version = '1.3.50'
    }

    repositories {
        mavenCentral()
        jcenter()

        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {

        // Kotlin Plugin
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")

        // Lint plugin
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.0-RC11"
    }
}

group = "info.digitalpoet.eengine"
version = "0.0.1"

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    /**
     * Intensive clean task (delete generated files) NOTE: When run this task, the first time that old_build project
     * not work. Need run 2 times or old_build first run springBoot task
     */
    clean << {
        delete "./out"
    }
}

subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"

    group = rootProject.group
    version = rootProject.version

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {

        // Kotlin dependencies
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"

        implementation 'io.github.microutils:kotlin-logging:1.7.6'

        // Logger
        implementation 'org.slf4j:slf4j-api:1.7.28'
        implementation 'org.slf4j:slf4j-simple:1.7.28'

        // Testing

        testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'

        testImplementation 'org.mockito:mockito-core:2.+'
        testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

        testImplementation 'org.hamcrest:hamcrest:2.1'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    detekt {
        parallel = true
        config = files("${project.rootProject.projectDir.absolutePath}/detekt-config.yml")
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

task deepClean(type: Delete) {
    delete "${rootProject.projectDir}/.gradle", "${rootProject.projectDir}/build"
    subprojects.each { delete "${it.projectDir}/old_build", "${it.projectDir}/build", "${it.projectDir}/out" }
}
